// package com.example.composite.service;

// import org.junit.jupiter.api.Test;
// import org.junit.jupiter.api.extension.ExtendWith;
// import org.mockito.InjectMocks;
// import org.mockito.Mock;
// import org.mockito.junit.jupiter.MockitoExtension;
// import org.springframework.web.servlet.DispatcherServlet;

// import com.example.composite.model.context.ExecutionContext;
// import com.example.composite.model.response.SubResponse;
// import com.fasterxml.jackson.databind.JsonNode;
// import com.fasterxml.jackson.databind.ObjectMapper;

// import java.io.IOException;
// import java.util.Map;

// import static org.junit.jupiter.api.Assertions.assertEquals;
// import com.example.composite.config.MockHttpServletRequestFactory;

// @ExtendWith(MockitoExtension.class)
// class CompositeRequestExecutorTest {

//     @Mock
//     private DispatcherServlet dispatcherServlet;
    
//     @Mock
//     private MockHttpServletRequestFactory mockRequestFactory;
    
//     @InjectMocks
//     private CompositeRequestExecutor executor;
    
//     private ObjectMapper objectMapper = new ObjectMapper();

//     @Test
//     void shouldResolveSimpleReference() {
//         // Given
//         ExecutionContext context = new ExecutionContext();
//         context.getResponseMap().put("prev", SubResponse.builder()
//             .body(Map.of("id", "123"))
//             .build());

//         String template = "/api/users/${prev.body.id}";
        
//         // When
//         String resolved = executor.resolveReferences(template, context.getResponseMap());
        
//         // Then
//         assertEquals("/api/users/123", resolved);
//     }

//     @Test
//     void shouldHandleNestedJsonReferences() throws IOException {
//         // Given
//         JsonNode body = objectMapper.readTree("""
//             {
//                 "user": {
//                     "details": {
//                         "id": "abc123"
//                     }
//                 }
//             }
//             """);
            
//         ExecutionContext context = new ExecutionContext();
//         context.getResponseMap().put("prev", SubResponse.builder()
//             .body(body)
//             .build());

//         String template = "/api/${prev.body.user.details.id}";
        
//         // When
//         String resolved = (String) executor.resolveReferences(template, context.getResponseMap());
        
//         // Then
//         assertEquals("/api/abc123", resolved);
//     }
// } 